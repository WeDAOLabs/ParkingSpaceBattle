/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC6551Registry,
  ERC6551RegistryInterface,
} from "../../../../contracts/systems/ERC6551/ERC6551Registry";

const _abi = [
  {
    inputs: [],
    name: "InitializationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a52806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006b575b600080fd5b61005560048036038101906100509190610472565b61009b565b60405161006291906104fc565b60405180910390f35b6100856004803603810190610080919061057c565b6100cd565b60405161009291906104fc565b60405180910390f35b6000806100ab8787878787610236565b8051906020012090506100c18360001b8261028a565b91505095945050505050565b6000806100dd8989898989610236565b905060006100f58660001b838051906020012061028a565b905060008173ffffffffffffffffffffffffffffffffffffffff163b1461012057809250505061022b565b61012f60008760001b8461029f565b9050600085859050146101e45760008173ffffffffffffffffffffffffffffffffffffffff16868660405161016592919061066a565b6000604051808303816000865af19150503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b50509050806101e2576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b7f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f818b8b8b8b8b60405161021d96959493929190610692565b60405180910390a180925050505b979650505050505050565b6060858286868660405160200161025094939291906106f3565b604051602081830303815290604052604051602001610270929190610889565b604051602081830303815290604052905095945050505050565b60006102978383306103a9565b905092915050565b6000834710156102e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102db90610924565b60405180910390fd5b6000825103610328576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031f90610990565b60405180910390fd5b8282516020840186f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036103a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610399906109fc565b60405180910390fd5b9392505050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610409826103de565b9050919050565b610419816103fe565b811461042457600080fd5b50565b60008135905061043681610410565b92915050565b6000819050919050565b61044f8161043c565b811461045a57600080fd5b50565b60008135905061046c81610446565b92915050565b600080600080600060a0868803121561048e5761048d6103d4565b5b600061049c88828901610427565b95505060206104ad8882890161045d565b94505060406104be88828901610427565b93505060606104cf8882890161045d565b92505060806104e08882890161045d565b9150509295509295909350565b6104f6816103fe565b82525050565b600060208201905061051160008301846104ed565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261053c5761053b610517565b5b8235905067ffffffffffffffff8111156105595761055861051c565b5b60208301915083600182028301111561057557610574610521565b5b9250929050565b600080600080600080600060c0888a03121561059b5761059a6103d4565b5b60006105a98a828b01610427565b97505060206105ba8a828b0161045d565b96505060406105cb8a828b01610427565b95505060606105dc8a828b0161045d565b94505060806105ed8a828b0161045d565b93505060a088013567ffffffffffffffff81111561060e5761060d6103d9565b5b61061a8a828b01610526565b925092505092959891949750929550565b600081905092915050565b82818337600083830152505050565b6000610651838561062b565b935061065e838584610636565b82840190509392505050565b6000610677828486610645565b91508190509392505050565b61068c8161043c565b82525050565b600060c0820190506106a760008301896104ed565b6106b460208301886104ed565b6106c16040830187610683565b6106ce60608301866104ed565b6106db6080830185610683565b6106e860a0830184610683565b979650505050505050565b60006080820190506107086000830187610683565b6107156020830186610683565b61072260408301856104ed565b61072f6060830184610683565b95945050505050565b600081905092915050565b7f3d60ad80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b6000610779601483610738565b915061078482610743565b601482019050919050565b60008160601b9050919050565b60006107a78261078f565b9050919050565b60006107b98261079c565b9050919050565b6107d16107cc826103fe565b6107ae565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b600061080d600f83610738565b9150610818826107d7565b600f82019050919050565b600081519050919050565b60005b8381101561084c578082015181840152602081019050610831565b60008484015250505050565b600061086382610823565b61086d818561062b565b935061087d81856020860161082e565b80840191505092915050565b60006108948261076c565b91506108a082856107c0565b6014820191506108af82610800565b91506108bb8284610858565b91508190509392505050565b600082825260208201905092915050565b7f437265617465323a20696e73756666696369656e742062616c616e6365000000600082015250565b600061090e601d836108c7565b9150610919826108d8565b602082019050919050565b6000602082019050818103600083015261093d81610901565b9050919050565b7f437265617465323a2062797465636f6465206c656e677468206973207a65726f600082015250565b600061097a6020836108c7565b915061098582610944565b602082019050919050565b600060208201905081810360008301526109a98161096d565b9050919050565b7f437265617465323a204661696c6564206f6e206465706c6f7900000000000000600082015250565b60006109e66019836108c7565b91506109f1826109b0565b602082019050919050565b60006020820190508181036000830152610a15816109d9565b905091905056fea2646970667358221220ab493311ffb808460768b641581cc0a88bbcffe22d0566beb7b0b12c3ab4559564736f6c63430008140033";

type ERC6551RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC6551RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC6551Registry__factory extends ContractFactory {
  constructor(...args: ERC6551RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC6551Registry> {
    return super.deploy(overrides || {}) as Promise<ERC6551Registry>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC6551Registry {
    return super.attach(address) as ERC6551Registry;
  }
  override connect(signer: Signer): ERC6551Registry__factory {
    return super.connect(signer) as ERC6551Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC6551RegistryInterface {
    return new utils.Interface(_abi) as ERC6551RegistryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC6551Registry {
    return new Contract(address, _abi, signerOrProvider) as ERC6551Registry;
  }
}
